// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  clients   Client[]
  createdAt DateTime @default(now())
}

model Client {
  id        String           @id @default(uuid())
  userId    String
  name      String
  email     String
  phone     String
  company   String?
  notes     String?
  user      User             @relation(fields: [userId], references: [id])
  projects  Project[]
  reminders Reminder[]
  logs      InteractionLog[]
  createdAt DateTime         @default(now())
}

model Project {
  id        String           @id @default(uuid())
  clientId  String
  title     String
  budget    Float
  deadline  DateTime
  status    String
  client    Client           @relation(fields: [clientId], references: [id])
  logs      InteractionLog[]
  reminders Reminder[]
  createdAt DateTime         @default(now())
}

model InteractionLog {
  id              String   @id @default(uuid())
  clientId        String?
  projectId       String?
  date            DateTime
  interactionType String
  notes           String
  client          Client?  @relation(fields: [clientId], references: [id])
  project         Project? @relation(fields: [projectId], references: [id])
  createdAt       DateTime @default(now())
}

model Reminder {
  id        String   @id @default(uuid())
  clientId  String?
  projectId String?
  dueDate   DateTime
  message   String
  client    Client?  @relation(fields: [clientId], references: [id])
  project   Project? @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
}
